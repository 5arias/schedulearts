<?php

/**
 * Implements hook_views_api().
 */
function schedulearts_views_api() {
  return array(
    'api' => 3,
  );
}

/**
 * Implements hook_node_validate().
 */
function schedulearts_node_validate($node, $form) {
}

/**
 * Implements hook_flag_link().
 *
 * When Flag uses a link type provided by this module, it will call this
 * implementation of hook_flag_link(). It returns a single link's attributes,
 * using the same structure as hook_link(). Note that "title" is provided by
 * the Flag configuration if not specified here.
 *
 * @param $flag
 *   The full flag object of for the flag link being generated.
 * @param $action
 *   The action this link will perform. Either 'flag' or 'unflag'.
 * @param $content_id
 *   The ID of the node, comment, user, or other object being flagged.
 * @return
 *   An array defining properties of the link.
 */
function schedulearts_flag($action, $flag, $content_id, $account) {
  if ($action == 'flag' && $flag->name == 'schedule_approved') {
    // Send email to group members
    $node = node_load($content_id);
    if (isset($node->field_sched_groups['und'])) {
      foreach ($node->field_sched_groups['und'] as $term_entry ) {
        $tid_array[] = $term_entry['tid'];
      }
      $tid_string = implode(',', $tid_array); 
      $users = db_query('SELECT DISTINCT users.uid AS uid 
        FROM users 
        INNER JOIN field_data_field_user_groups 
        ON users.uid = field_data_field_user_groups.entity_id 
        AND field_data_field_user_groups.entity_type = \'user\' 
        WHERE (( field_data_field_user_groups.field_user_groups_tid IN ( :tid )  ))', array(':tid' => $tid_string));
      foreach ($users as $user) {
        $userfields = reset(entity_load('user', array($user->uid)));
        // Build the view
        $allowed_tags = array('a', 'em', 'i', 'strong', 'b', 'br', 'p', 'blockquote', 'ul', 'ol', 'li', 'dl', 'dt', 'dd', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'hr');
        $view = views_get_view('taxonomy_term_calendar' , TRUE);
        $arg[] =$node->field_sched_date['und']['0'];
        $arg[] = $userfields->uid;
        $views_result = $view->preview('page_2', $arg);
        $sched_view_output = drupal_html_to_text($views_result, $allowed_tags);

        $sched_from = variable_get('system_mail', 'info@schedulearts.com');
        $sched_to = $userfields->mail;
        $sched_to_name = $userfields->name;
        $sched_daterng = $node->field_sched_date['und']['0']['value'] . ' - ' . $node->field_sched_date['und']['0']['value2'];
        $sched_subj = 'Your personal schedule for ' . $sched_daterng;
        if ($node->body['und']) $sched_note = $node->body['und']['0']['value'];
        $sched_body = "Dear $sched_to_name,
      
  $sched_note 

  Here is your schedule for the period $sched_daterng. You can see this in a friendlier format online at: 
          
        $GLOBALS[base_url]/user/$user->uid/mycal
          
          
  *** MY SCHEDULE FOR $sched_daterng ***
  $sched_view_output

  Thanks!";

        // TODO : send the message!

        $mailtoken = microtime();
        $mailid = 'schedulearts' . '_' . $mailtoken;
        $message = array(
          'id' => $mailid,
          'to' => $sched_to,
          'subject' => $sched_subj,
          'body' => array($sched_body),
          'headers' => array(
            'From' => $sched_from,
            'Sender' => $sched_from,
            'Return-Path' => $sched_from
          ),
        );
        $system = drupal_mail_system('schedulearts', $mailtoken);
        $message = $system->format($message);

        if ($system->mail($message)) {
        }
      }
    }
  }
}
