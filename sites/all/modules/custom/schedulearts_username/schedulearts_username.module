<?php
/**
 * @file
 * Provides a menu callback for update username for user object firstname lastname combination.
 */

/**
 * Implements hook_menu().
 */
function schedulearts_username_menu() {
  $items = array();

  $items['admin/update-username'] = array(
    'title' => 'Update usernames',
    'description' => 'Update usernames',
    'access callback' => 'user_access',
    'access arguments' => array('admin'),
    'page callback' => 'schedulearts_username_update',
    'page arguments' => array(),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Updates all active usernames to firstname lastname combination
 *
 * @return string
 */
function schedulearts_username_update() {
  // Select all active users.
  $users = db_select('users', 'u')
    ->fields('u', array('uid'))
    ->condition('status', 0,'>')
    ->execute()
    ->fetchAll();
  foreach($users as $user) {
    // Prevent renaming the admin user.
    if ($user->uid != 1) {
      // Load user account.
      $account = user_load($user->uid);
      // Wrap user account.
      $account_wrapper = entity_metadata_wrapper('user', $account);

      // Load first name.
      $account_fname = $account_wrapper->field_user_fname->value(array('sanitize' => TRUE));
      // Load last name.
      $account_lname = $account_wrapper->field_user_lname->value(array('sanitize' => TRUE));
      // Update username if first name or last name is not null.
      if ($account_fname != NULL || $account_lname != NULL) {
        // Create the name.
        $new_name = trim($account_fname) . ' ' . trim($account_lname);
        $account_wrapper->name->set($new_name);

        // Save entity.
        $account_wrapper->save();
      }
    }
  }
  return t('The usernames have been updated.');
}
